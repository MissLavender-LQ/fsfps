
//---------------------------
//                          
//     fart readme
//
//---------------------------
    
    fart takes a Build engine art file and extracts all the graphics from it
    into windows bmp format and outputs a nice flg file containing all the
    info the art file had about each graphic but now in human readable form.
    
    It works something like:
    
        fart filename [options]
    
    Where filename is the name of the art file itself and the options are:
    
        --palette filename
            
            Makes fart use the specified file as a palette. Can use normal
            768 byte palette files or Build palettes (these must have the
            extension .dat or .DAT to be detected properly). If this isn't
            specified, fart looks for a file called PALETTE.DAT (case is
            important here).

        --void

            All outputted bitmaps are entirely transparent (made up of
            colour 255, Build's transparent colour) but are the same
            dimensions and have the same flag values as the source gfx.

    All bitmaps are named ART#####.bmp where ##### is the bitmap number.

//---------------------------
//                          
//     Digest readme
//
//---------------------------
    
    Digest takes a fart created flag file and all the bmps you specified
    then crams them into a nice little art file for you.
    
    It works something like:
    
        digest filename [options]
    
    Where filename is the name of the flag file to be used to create the
    new art file and the options are:
    
        -o filename
            
            This specifies the output filename of the art file that
            digest will be creating for you. If you don't specify this
            it just uses the name of the flag file but changes the extension
            from .flg to .art .

   That should be everything.            

//---------------------------
//                          
//     flag file readme
//
//---------------------------
    
    Flag files specify information used by the Build engine. An example could
    look something like:
    
        # generated by fart from TILES000.lmp
        # file name - numframes - animtype - xoffset - yoffset - animspeed
        numtiles 256
        tilestart 0
        ART00000   2   AnmFd   0   0   5
        .
        .
        .
        ART00255   0   NoAnm   0   0   0
    
    First of all, any lines starting with # are comments. As for the rest,
    numtiles specifies the number of graphic files. tilestart says what tile
    number the graphics start off (used by build when there are multiple 
    art files in use, which is basically all the time). Try to keep numtiles
    and tilestart at the top of the file, before any flag info.
    
    The graphics and flags themselves are in the format:

        # filename  numframes  anim type  x offset  y offset  anim speed

    filename
        Any name can be used for the filename, this will be postfixed with .bmp
        so if you want to load DUKFIST.bmp you would put DUKFIST there instead
        of ART00000 or whatever. 
        
    numframes 
        How many frames there will be in the animation, this can be 
        between 0 and 63.
    
    animtype
        String specifying one of the 4 animation types:
        
        NoAnm
            No animation is tagged to this frame.
        
        Oscil
            Oscillate backwards and forwards through the frames
        
        AnmFd
            Go through each frame in turn and then jump back to the first frame
        
        AnmBk
            Go backwards through each frame in turn and then jump back to the 
            last frame

    xoffset and yoffset
        Amount image is offset from the centre of the image 0-255 for each.
    
    speed
        speed of animation (from 0-15)
